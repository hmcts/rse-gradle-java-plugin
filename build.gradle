plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id "uk.gov.hmcts.java" version "0.12.64"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.owasp:dependency-check-gradle:10.0.3'

    compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation group: 'commons-io', name: 'commons-io', version: '2.16.1'
    testImplementation group: 'com.google.guava', name: 'guava', version: '33.2.1-jre'

    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.compilerArgs += ["-Werror"]
}

def version = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

group 'uk.gov.hmcts.reform'
project.version version

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'uk.gov.hmcts.java'
            implementationClass = 'uk.gov.hmcts.JavaPlugin'
            displayName = 'HMCTS Java standards plugin'
            description = 'Applies HMCTS Java coding standards'
            tags.set(['hmcts'])
        }
    }
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

gradlePlugin.testSourceSets(sourceSets.integrationTest)
configurations.integrationTestImplementation.extendsFrom(configurations.testImplementation)

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

integrationTest.mustRunAfter test

check {
    dependsOn(tasks.integrationTest)
}

gradlePlugin {
    website = 'https://github.com/hmcts/gradle-java-plugin'
    vcsUrl = 'https://github.com/hmcts/gradle-java-plugin'
}

ext['gradle.publish.key'] = System.getenv('GRADLE_PLUGIN_PORTAL_KEY')
ext['gradle.publish.secret'] = System.getenv('GRADLE_PLUGIN_PORTAL_SECRET')

// The tests use copies of this build.
tasks.integrationTest.inputs.files file('test-projects')
